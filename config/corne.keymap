/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// override mouse movement speed

#define ZMK_POINTING_DEFAULT_MOVE_VAL 3200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        copy_paste: copy_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_PASTE";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>, <&kp LG(V)>;
        };

        home_row: home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_COMMA";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COMMA>;
        };

        td_q: td_q {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Q";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp LC(Q)>;

            tapping-term-ms = <175>;
        };

        td_e: td_e {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_E";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp LC(E)>;

            tapping-term-ms = <175>;
        };

        td_r: td_r {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_R";
            #binding-cells = <0>;
            bindings = <&kp R>, <&kp LC(R)>;

            tapping-term-ms = <175>;
        };

        td_t: td_t {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_T";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp LC(T)>;

            tapping-term-ms = <175>;
        };

        td_z: td_z {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Z";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp LC(Z)>;

            tapping-term-ms = <175>;
        };

        td_x: td_x {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_X";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp LC(X)>;

            tapping-term-ms = <175>;
        };

        td_c: td_c {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_C";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp LC(C)>;

            tapping-term-ms = <175>;
        };

        td_b: td_b {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_B";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp LC(B)>;

            tapping-term-ms = <175>;
        };

        td_v: td_v {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_V";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LC(V)>;

            tapping-term-ms = <175>;
        };

        td_f: td_f {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_F";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp LC(F)>;

            tapping-term-ms = <175>;
        };

        td_g: td_g {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_G";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp LC(G)>;

            tapping-term-ms = <175>;
        };

        td_1: td_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_1";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1>, <&kp LC(NUMBER_1)>;

            tapping-term-ms = <175>;
        };

        td_2: td_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_2";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_2>, <&kp LC(NUMBER_2)>;

            tapping-term-ms = <175>;
        };

        td_3: td_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_3";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_3>, <&kp LC(NUMBER_3)>;

            tapping-term-ms = <175>;
        };

        td_4: td_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_4";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4>, <&kp LC(NUMBER_4)>;

            tapping-term-ms = <175>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to_mouse {
            bindings = <&to 5>;
            key-positions = <14 15 16>;
            layers = <0 3 6 7>;
        };

        to_home {
            bindings = <&to 0>;
            key-positions = <13 14 15 16>;
            layers = <5 3 0 6 7>;
        };

        to_ploopy {
            bindings = <&to 3>;
            key-positions = <13 14 15>;
            layers = <0 3 5 6 7>;
        };

        tab_prev {
            bindings = <&kp LS(LG(LEFT_BRACKET))>;
            key-positions = <13 14>;
            layers = <5 6 7>;
        };

        tab_next {
            bindings = <&kp LS(LG(RIGHT_BRACKET))>;
            key-positions = <16 15>;
            layers = <3 5 6 7>;
        };

        tab_refresh {
            bindings = <&kp LG(R)>;
            key-positions = <14 15>;
            layers = <3 5 6 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB      &kp Q                   &kp W              &kp E                 &kp R                     &kp T          &kp Y      &kp U                      &kp I                  &kp O              &kp P                            &kp EQUAL
&kp ESC      &home_row LEFT_SHIFT A  &home_row LCTRL S  &home_row LEFT_ALT D  &home_row LEFT_COMMAND F  &kp G          &kp H      &home_row RIGHT_COMMAND J  &home_row RIGHT_ALT K  &home_row RCTRL L  &home_row RIGHT_SHIFT SEMICOLON  &kp SQT
&copy_paste  &lt 1 Z                 &lt 5 X            &lt 2 C               &kp V                     &kp B          &kp N      &kp M                      &kp COMMA              &kp DOT            &kp FSLH                         &none
                                                        &kp EQUAL             &kp BACKSPACE             &lt 4 MINUS    &kp ENTER  &kp SPACE                  &kp GRAVE
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans          &trans            &trans        &trans             &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans       &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW  &kp RIGHT_ARROW    &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans          &kp C_PREVIOUS    &kp C_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
                        &trans  &trans  &kp LC(S)    &kp C_MUTE      &kp C_PLAY_PAUSE  &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                        &trans  &trans  &dot_comma    &trans  &trans        &kp N0
            >;
        };

        ploopy {
            bindings = <
&kp LG(LS(NUMBER_4))  &mkp MB4         &mkp MB5        &kp LS(LG(LEFT_BRACKET))  &kp LS(LG(RIGHT_BRACKET))  &kp LG(R)    &trans  &trans  &trans  &trans  &trans  &trans
&trans                &trans           &trans          &trans                    &trans                     &kt ENTER    &trans  &trans  &trans  &trans  &trans  &trans
&trans                &msc SCRL_RIGHT  &msc SCRL_LEFT  &msc SCRL_DOWN            &msc SCRL_UP               &kp LG(W)    &trans  &trans  &trans  &trans  &trans  &trans
                                                       &mkp MCLK                 &mkp LCLK                  &mkp RCLK    &trans  &trans  &trans
            >;
        };

        paren {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &soft_off                  &trans                &trans                 &trans         &trans  &bt BT_CLR_ALL
&trans  &trans        &trans        &trans        &trans        &trans          &kp DOLLAR                 &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH  &trans  &bt BT_CLR
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp DOLLAR                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none          &trans  &trans
                                    &trans        &trans        &trans          &kp LS(LG(RIGHT_BRACKET))  &kp C_PP              &trans
            >;
        };

        mouse {
            bindings = <
&kp LS(LG(NUMBER_4))  &trans           &trans          &trans          &to 6         &trans       &trans          &trans            &trans          &trans           &trans  &trans
&trans                &trans           &trans          &trans          &trans        &kp ENTER    &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_UP    &mmv MOVE_RIGHT  &trans  &trans
&trans                &msc SCRL_RIGHT  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &kp LG(W)    &trans          &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT       &trans  &trans
                                                       &mkp MCLK       &mkp LCLK     &mkp RCLK    &trans          &mkp LCLK         &mkp RCLK
            >;
        };

        mouse2 {
            bindings = <
&trans  &trans           &trans          &to 5           &to 7         &trans       &trans              &trans             &trans              &trans             &trans  &trans
&trans  &trans           &trans          &trans          &trans        &kp ENTER    &mmv MOVE_X(-1800)  &mmv MOVE_Y(1800)  &mmv MOVE_Y(-1800)  &mmv MOVE_X(1800)  &trans  &trans
&trans  &msc SCRL_RIGHT  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &kp LG(W)    &trans              &kp C_PLAY_PAUSE   &kp C_PREVIOUS      &kp C_NEXT         &trans  &trans
                                         &trans          &mkp LCLK     &mkp RCLK    &trans              &mkp LCLK          &mkp RCLK
            >;
        };

        mouse3 {
            bindings = <
&trans  &trans           &trans          &to 6           &trans        &trans       &trans              &trans             &trans              &trans             &trans  &trans
&trans  &trans           &trans          &trans          &trans        &kp ENTER    &mmv MOVE_X(-1200)  &mmv MOVE_Y(1200)  &mmv MOVE_Y(-1200)  &mmv MOVE_X(1200)  &trans  &trans
&trans  &msc SCRL_RIGHT  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &kp LG(W)    &trans              &kp C_PLAY_PAUSE   &kp C_PREVIOUS      &kp C_NEXT         &trans  &trans
                                         &trans          &mkp LCLK     &mkp RCLK    &trans              &mkp LCLK          &mkp RCLK
            >;
        };
    };
};
